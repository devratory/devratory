version: "3.3"
services:
  gateway:
    image: devlab-gateway-ms:1.0.0
    build:
      context: ./devratory-gateway
      target: development
      dockerfile: ./Dockerfile
    command: npm run start:dev
    volumes:
      - ./devratory-gateway:/usr/src/app
      - /usr/src/app/node_modules
      - ./workflows.json:/usr/src/app/workflows.json
    restart: always
    env_file:
      - .env
    ports:
      - ${GATEWAY_PORT}:${GATEWAY_PORT}
    networks:
      - backend
    links:
      - redis

  devlab:
    image: devlab-ms:1.0.0
    build:
      context: ./devratory-server-ms
      target: development
      dockerfile: ./Dockerfile
    command: npm run start:dev
    volumes:
      - ./devratory-server-ms:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - ${DEVLAB_PORT}:${DEVLAB_PORT}
    networks:
      - backend
    depends_on:
      - devlab_db
    links:
      - devlab_db

  user:
    image: ekhmoi/devlab-user:0.0.2
    command: npm run start:prod
    restart: always
    env_file:
      - .env
    ports:
      - ${USER_PORT}:${USER_PORT}
    networks:
      - backend
    depends_on:
      - devlab_db
    links:
      - devlab_db

  token:
    image: ekhmoi/devlab-token:0.0.4
    command: npm run start:prod
    restart: always
    env_file:
      - .env
    ports:
      - ${TOKEN_PORT}:${TOKEN_PORT}
    networks:
      - backend
    depends_on:
      - devlab_db
    links:
      - devlab_db

  devlab_db:
    image: mongo
    volumes:
      - ./db/data/db-files:/data/db
      # - ./db/mongod.conf:/etc/mongod.conf
    ports:
      - "27017:27017"
    # entrypoint: ['mongod', '--config', '/etc/mongod.conf']
    logging:
      driver: none
    networks:
      - backend

  client:
    build: 
      context: ./devratory-angular-client
      dockerfile: Dockerfile
    command: npm run start
    ports:
      - "4200:4200"
    volumes:
      - ./devratory-angular-client/src:/usr/src/app/src

  redis:
    image: redis
    expose:
      - 6379
    networks:
      - backend

  # nginx:
  #   image: nginx:latest
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #   ports:
  #     - 80:80
  #     - 443:443
  #   networks:
  #     - backend

networks:
  backend:
    driver: bridge
